mse version:		2.0.0
game: 				magic
short name: 		Hedron
full name: 			Zendikar Showcase
icon: 				card-sample.png
installer group: 	magic/m15 style/normal cards
position hint: 		095

version:			2024-09-01
depends on:
	package:		magic.mse-game
	version:		2014-06-25
depends on:
	package:		magic-default-image.mse-include
	version:		2007-09-23
depends on:
	package:		magic-modules.mse-include
	version:		2024-10-01
depends on:
	package:		magic-mana-large.mse-symbol-font
	version:		2007-09-23
depends on:
	package:		magic-mana-small.mse-symbol-font
	version:		2007-09-23
depends on:
	package:		magic-mainframe-extras.mse-include
	version:		2007-09-23
depends on:
	package:		magic-watermarks.mse-include
	version:		2016-03-13

card width: 		375
card height: 		523
card dpi: 			150
####### images from digiman
############################################################## Extra scripts
init script:
	swap_fonts_pt_default :=
	[
		name: {"Beleren Bold"},
		size: {12.0},
		color: {"black"},
		vertical: {0},
		italic: {"Beleren Bold"}
	]
	
	swap_fonts_body_default :=
	[
		name: {"MPlantin"},
		size: {14.0},
		color: {"white"},
		vertical: {0},
		italic: {"MPlantin-Italic"}
	]
	
	typeline_offset_width_1 := { 0 }
	typeline_offset_left_1 := { 0 }
	rarity_offset_top_1 := { 2 }
	swap_fonts_type_default :=
	[
		name: {"Beleren Bold"},
		size: {13.0},
		color: {"black"},
		vertical: {0},
		italic: {""}
	]
	
	transform_symbol_disabled_1 := { true }
	card_symbol_offset_left_1 := { 0 }
	nameline_offset_width_1 := { 0 }
	nameline_offset_left_1 := { 0 }
	swap_fonts_name_default :=
	[
		name: {"Beleren Bold"},
		size: {15.0},
		color: {"black"},
		vertical: {0},
		italic: {""}
	]
	
	card_stamp_offset_top_1 := { 0 }
	
	foil_mask_added_sections := {
		output := []
		pt_field := if face == 1 then card.pt else card["pt_" + face]
		if pt_field != "" then output := output + ["foil_mask_pt.png"]
		if is_crowned() then output := output + ["foil_mask_crown.png"]
		output
	}@(face:1)

	template_prefix := [
		card: "card/",
		card2: "back/",
		pt: "pt/",
		crown: "crown/",
		stamp: "stamp/",
		ubstamp: "stamp/ub/",
		alias: "/magic-modules.mse-include/extras/alias/",
		identity: "/magic-modules.mse-include/indicators/"
	]
	template_suffix := [
		card: "card.png",
		card2: "card.png",
		pt: "pt.png",
		crown: "crown.png",
		stamp: "stamp.png",
		ubstamp: "stamp.png",
		alias: "alias.png",
		identity: "identity.png"
	]
	template :=			{ template_prefix[type] + input + template_suffix[type] }
	land_template :=	{ template_prefix[type] + (if input == "a" then "c" else input) + template_suffix[type] }
	
	card_crown :=		{ color_background(input: card.card_color,	type: "crown",		base_hybrid: card_hybrid) }
	card_ptbox :=		{ color_background(input: card.card_color,	type: "pt",			base_hybrid: card_hybrid) }
	card_alias :=		{ color_background(input: card.card_color,	type: "alias",		base_hybrid: card_hybrid) }
	ub_stamp :=			{ color_background(blend_type: "stamp",		type: "ubstamp",	base_hybrid: card_hybrid) }
	hedron_background := { color_background(type:"card2",			base_hybrid: card_hybrid) }
	
	pure_colors :=
	{
		sort_text(
			order: if card_is_wedge(input) then "(wbgur)" else "(wubrg)",
			(if chosen(card.card_color, choice:"white")	then "w") +
			(if chosen(card.card_color, choice:"blue")	then "u") +
			(if chosen(card.card_color, choice:"black")	then "b") +
			(if chosen(card.card_color, choice:"red")	then "r") +
			(if chosen(card.card_color, choice:"green")	then "g")
		)
	}
	pt_colors := { if styling.PT_color_scheme == "canon" then pt_colors_canon() else styling.PT_color_scheme }
	pt_colors_canon := { if is_hybrid_cost() then "land" else "gold" }
	
	is_promo := { styling.promo }
	
	is_unsorted := { styling.remove_from_autocount }
	is_skinned := { styling.godzilla_style_alias }
	use_vorthos := { styling.vorthos_box }
	
	is_crowned := { styling.legend_crown == "yes" or (styling.legend_crown == "if legendary" and lang_setting("is_legendary")(card.super_type)) }
	
	chop_top := { split := split_comma(styling.chop_text_box); if length(split) > 0 and split.0 != "" then clamp(split.0, maximum: 1500, minimum: -1500) else 0 }
	chop_bot := { split := split_comma(styling.chop_text_box); if length(split) > 1 and split.1 != "" then clamp(split.1, maximum: 1500, minimum: -1500) else 0 }
	
	popout_left := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.0 != "" then clamp(split.0, maximum: 1500, minimum: -500) else 0 }
	popout_top := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.1 != "" then clamp(split.1, maximum: 2000, minimum: -500) else 0 }
	popout_width := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.2 != "" then clamp(split.2, maximum: 1500, minimum: 0) else 0 }
	popout_height := { split := split_comma(styling.popout_image_coordinates); if length(split) > 3 and split.3 != "" then clamp(split.3, maximum: 2000, minimum: 0) else 0 }
############################################################## Extra style options

styling field:
	type:			text
	name:			popout image coordinates
	description:	The coordinates for the popout image field, formatted as "left,top,width,height". Used to make the illustration jump in front of the frame.
styling field:
	type:			boolean
	name:			stretch image to whole card
	description:	Make the image span the whole card instead of just the visible part. Use this to help make popout effects.
	initial:		no

include file: /magic-modules.mse-include/texts/styling_fields

styling field:
	type:			choice
	name:			PT color scheme
	description:	Use the selected color scheme for the PT box on two color cards. Canon is "land" on hybrid cards, "gold" otherwise.
	choice:			canon
	choice:			gold
	choice:			hybrid
	choice:			colored
	choice:			land
	initial:		canon
styling field:
	type:			choice
	name:			legend crown
	description:	Use the legend crown?
	choice:			yes
	choice:			if legendary
	choice:			no
	initial:		yes

include file: /magic-modules.mse-include/rarities/styling_fields

include file: /magic-modules.mse-include/watermarks/styling_fields

styling field:
	type:			boolean
	name:			godzilla style alias
	description:	Use a Godzilla-style alias to rename cards?
	initial:		no
styling field:
	type:			boolean
	name:			vorthos box
	description: 	Where they put mtgstory.com on story spotlights.
	initial:		yes
styling field:
	type:			package choice
	name:			overlay
	description:	Should there be an overlay applied, such as foil?
	match:			magic-overlay-*.mse-include
	required:		false

include file: /magic-modules.mse-include/information/styling_fields

include file: /magic-modules.mse-include/symbol-fonts/styling_fields

include file: /magic-modules.mse-include/fonts/styling_fields

############################################################## Card fields

include file: /magic-modules.mse-include/information/card_fields

include file: /magic-modules.mse-include/stamps/card_fields

include file: /magic-modules.mse-include/corners/card_fields

include file: /magic-modules.mse-include/watermarks/card_fields

include file: /magic-modules.mse-include/separators/card_fields

include file: /magic-modules.mse-include/namelines/card_fields

include file: /magic-modules.mse-include/typelines/card_fields

card style:
	############################# Background stuff
	border color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		left width:			44
		right width:		42
		top width:			45
		bottom width:		66
		z index:			1
		mask:				border_mask.png
	card color:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			0
		render style:		image
		popup style:		in place
		image:				{ card_background() }
		mask:				frame_mask.png
	############################# Image
	image:
		left:				0
		top:				0
		width:				375
		height:				523
		z index:			-1
	mainframe image:
		left:				{ popout_left() }
		top:				{ popout_top() }
		width:				{ popout_width() }
		height:				{ popout_height() }
		z index:			1010
	############################# Name line
	alias:
		left: { (stylesheet.card_width - 295) / 2 }
		top: 	51
		width: 	{if is_skinned() then 295 else 0}
		height: 21
		alignment: { (if is_skinned() then "center" else "") + "bottom shrink-overflow"}
		padding bottom: 0
		z index: 900
		font:
			name: MPlantin-Italic
			size: 10
			style: bold
			weight: bold
			color: white
	############################# Text box
	text:
		left: 				29
		top: 				{327-(-chop_top())}
		width: 				314
		bottom: 			{481-chop_bot()}
		z index:			900
		padding left:		6
		padding right:		4
		line height hard:	{ if is_modal(card.rule_text) then 0.9 else 1.2 }
		line height line:	1.5
		line height soft:	0.9
		line height hard max:	{ if is_modal(card.rule_text) then 1.0 else 1.3 }
		line height line max:	1.6
		alignment:
			script:
				if (styling.center_text == "short text only" and
				   not contains(match:"\n", card.rule_text) and
				   card.flavor_text == "<i-flavor></i-flavor>" and
				   card_style.text.content_lines <= 2) or
				   styling.center_text == "always"
				then "middle center"
				else "middle left"
		font:
			name:				{ body_font() }
			italic name:		{ body_font_italic() }
			size:				{ body_font_size() }
			scale down to:		6
			color:				{ body_font_color() }
		symbol font:
			name:				{ styling.text_box_mana_symbols }
			size:				{ body_font_size() }
			scale down to:		6
	############################# PT
	pt:
		left:				286
		top:				469
		width:				60
		height:				28
		z index:			900
		alignment:			center middle shrink-overflow
		font:
			name: 				Beleren Bold
			size: 				16
			color: 				{if contains(card.card_color match:"artifact") or (contains(card.card_color match:"white") and not contains(card.card_color match:"multicolor")) then "black" else "white"}
			separator color:	red
############################################################## Extra card fields
extra card field:
	type: 				choice
	name: 				pt box
	script: 			card.card_color
	editable: 			false
	save value: 		false
extra card field:
	type: 				choice
	name: 				foil layer
	choice: 			foil
	save value: 		false
	editable: 			false
extra card field:
	type: 				choice
	name: 				vehicle overlay
	choice: 			overlay
	editable: 			false
	save value: 		false
	show statistics: 	false
extra card field:
	type: 				choice
	name: 				crown
	choice: 			overlay
	script: 			card.card_color
	editable:			false
extra card field:
	type:			 	choice
	name:			 	back
	choice: 			overlay
	script: 			card.card_color
	editable: 			false
extra card field:
	type: 				text
	name: 				vorthos box
	save value: 		true
	editable: 			true
extra card field:
	type: 				choice
	name: 				alias bar
	script: 			card.card_color
	save value: 		false
	editable: 			false

extra card style:
	pt box:
		left:				273
		top:				466
		width:				81
		height:				42
		z index:			1
		visible:			{ card.pt != "" }
		render style:		image
		image:
			script:
				pure := pure_colors()
				count := length(pure)
				color := pt_colors()
				if color == "gold" and count > 1 then template("m", type: "pt")
				else if color == "land" and count > 1 then template("c", type: "pt")
				else if color == "hybrid" and count == 2 then masked_blend(mask: "special_blend_pt.png", dark: template(pure.0, type: "pt"), light: template(pure.1, type: "pt"))
				else card_ptbox()
	foil layer:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			1050
		visible:			{ styling.overlay != "none" and styling.overlay != "" }
		render style:		image
		image:				{ if styling.overlay == "" then "" else styling.overlay + "/overlay.png" }
		mask: 				{ foil_mask_blended_image() }
	crown:
		left:				0
		top:				0
		width:				{ stylesheet.card_width }
		height:				{ stylesheet.card_height }
		z index:			840
		visible:			{ is_crowned() }
		render style:		image
		image:				{ card_crown() }
	back:
		left: 0
		top: 0
		width: 375
		height: 523
		render style: image
		image: {hedron_background()}
		z index: -1
	vorthos box:
		right: { if card.pt != "" then 276 else 350 }
		top: 489
		width: 140
		height: {if use_vorthos() then 10 else 0}
		z index: 900
		alignment: middle right
		font:
			name: Relay-Medium
			size: 7
			color: white
			weight: bold
	alias bar:
		left: { (stylesheet.card_width - 300) / 2 }
		top: 55
		width: 300
		height: 21
		z index: 49
		render style: image
		visible: {is_skinned()}
		image: {module_alias()}